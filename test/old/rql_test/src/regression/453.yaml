desc: Sanity Check Fails, with r.table() expression inside a map (#453)
tests:

  - cd: r.db('test').table_create('foo')
    def: tbl = r.db('test').table('foo')

  - cd: tbl.insert([{'a':1},{'a':2}])
    rb: tbl.insert([{:a=>1},{:a=>2}])

  - js: r.table('foo').map(function(x) { return r.table('foo'); })
    py: "r.table('foo').map(lambda x: r.table('foo'))"
    rb: r.table('foo').map{ |x| r.table 'foo' }
    ot: err("RqlRuntimeError", 'Expected type DATUM but found TABLE.', [0])

  - js: r.table('foo').map(function(x) { return r.table('foo').coerceTo('array'); }).count()
    py: "r.table('foo').map(lambda x: r.table('foo').coerce_to('array')).count()"
    rb: r.table('foo').map{ |x| r.table('foo').coerce_to('array') }.count
    ot: 2

  - cd: r.db('test').table_drop('foo')